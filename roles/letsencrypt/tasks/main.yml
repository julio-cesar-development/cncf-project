- name: "Add Certbot PPA"
  apt_repository:
    repo: 'ppa:certbot/certbot'

- name: "Install Certbot for Nginx"
  apt:
    name: "python-certbot-nginx"
    state: present

- name: "Stop Nginx"
  # systemctl stop nginx
  service: name=nginx state=stopped

- name: "Check for existing of certificate"
  stat:
    path: /etc/letsencrypt/live/{{ cert_domain_name }}/cert.pem
  register: cert_exists

- name: "Check for service running on port 80"
  wait_for:
    port: 80
    timeout: 10
    state: stopped
    msg: "Port 80 already allocated"
  register: service_status
  ignore_errors: yes

- name: "Debug cert_exists"
  debug:
    var: cert_exists

- name: "Debug service_status"
  debug:
    var: service_status

# generate a new certificate with LetsEncrypt
# - name: "Generate certificate for {{ cert_domain_name }}"
#   shell: certbot certonly --standalone --noninteractive --agree-tos --email {{ cert_admin_email }} -d {{ cert_domain_name }}
#   when:
#     - cert_exists.stat.exists == false
#     - service_status.failed == false

# get existing certificates from S3
- name: "Put S3 docker template"
  template:
    src: s3-docker.sh
    dest: /tmp/s3-docker.sh
    owner: root
    group: root
    mode: '0777'

- name: "Apply S3 docker"
  shell: bash /tmp/s3-docker.sh
  args:
    chdir: $HOME
    creates: s3_docker_run.log
  when:
    - cert_exists.stat.exists == false
    - service_status.failed == false
